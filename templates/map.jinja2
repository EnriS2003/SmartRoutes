<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Output DataFrame</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css" />
    <link rel="stylesheet" href="{{ url_for('static', filename='css/map_style.css') }}">

    <script src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js"></script>
</head>

<body>
    <div class="container">
        <h1>Output DataFrame</h1>
        <!-- Render the DataFrame as an HTML table -->
        {{ table_html|safe }}

        <h2>Map of Routes</h2>
        <div id="map"></div>
    </div>

   <script>
            // Initialize the map
            var map = L.map('map').setView([46.4983, 11.3548], 10);  // Initial position centered on Bolzano

            // Add OpenStreetMap base layer
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                maxZoom: 10,
                attribution: '&copy; OpenStreetMap contributors'
            }).addTo(map);

            // Route data received from backend
            var routes = {{ routes_data|tojson|safe }};

            // Predefined colors for routes
            var colors = ['red', 'blue', 'green', 'purple', 'orange', 'darkred', 'lightblue', 'lightgreen', 'gray'];

            // Function to add routes to the map
            routes.forEach(function(route, index) {
                var latlngs = route.coordinates.map(function(coord) {
                    return [coord[0], coord[1]];  // Convert coordinates to LatLng format
                });

                // Add polyline for each route
                L.polyline(latlngs, {
                    color: colors[index % colors.length],
                    weight: 5,
                    opacity: 0.7
                }).addTo(map).bindPopup('Route ' + (index + 1));
            });
   </script>
</body>
</html>
